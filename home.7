.Dd October 12, 2022
.Dt HOME 7
.Os
.Sh NAME
.Nm home
.Nd my system and how I interact with it
.Sh HARDWARE
I use a secondhand Lenovo Thinkpad T430 model 23501M2,
with an Intel(R) Core(TM) i5-3320M CPU @ 2.60GHz and 8GB of RAM.
.Pp
I applied the following modifications to the laptop:
.Bl -bullet -compact
.It
I replaced the DVD optical drive with a Serial Ultrabay Enhanced HDD Adapter.
The adapter contains a TOSHIBA MQ01ABD0 500GB HD.
.Lk https://thinkwiki.org/wiki/Ultrabay Ns .
.It
I replaced the T430 chiclet-style keyboard with the T420 classic keyboard,
using the method 2 (Sand down the nubs to fit in the T430 palmrest) on
.Lk https://thinkwiki.org/wiki/Upgrading_T430_Keyboard Ns .
I have not flashed the BIOS to make the keyboard work from boot yet;
but I use xkbcomp(1) to set the keymap on X11.
.It
I wrapped the T430 lid with a black faux leather vinyl adhesive.
.El
.Sh OPERATING SYSTEM
I use OpenBSD -current.
See
.Lk https://www.openbsd.org/faq
for more information on the operating system and how to install it.
.Pp
After installation, I run
.Xr userinfo 8
to make sure my user is in the wheel group and in the staff login class.
If it is not, I set it up with
.Xr usermod 8 .
.Pp
I create
.Pa /etc/doas.conf
to give administrator priviledges to the wheel group.
The example file at
.Pa /etc/examples/doas.conf
is reasonable,
but I also add
.Ic persist
to it so I'm not asked for password again for some time after successfully authenticating.
I also make it possible for wheel users to run certain commands without password.
.Bd -literal -offset indent
permit persist keepenv :wheel
permit nopass keepenv :wheel as root cmd sysupgrade
permit nopass keepenv :wheel as root cmd syspatch
permit nopass keepenv :wheel as root cmd pkg_add
permit nopass keepenv :wheel as root cmd reboot
permit nopass keepenv :wheel as root cmd mount
permit nopass keepenv :wheel as root cmd umount
.Ed
.Pp
The default system resources limits to the staff login class defined at
.Pa /etc/login.conf
are reasonable.
But the
.Ic datasize-cur
option can be increased a little bit, if necessary.
.Pp
I use the following programs available on the OpenBSD package repository.
.Bl -bullet -compact
.It
.Sy calc
.It
.Sy chibi-scheme
.It
.Sy colortree
.It
.Sy feh
.It
.Sy ffmpegthumbnailer Ns ,
.Sy ImageMagick Ns ,
.Sy poppler-utils Ns ,
.Sy mediainfo Ns ,
and
.Sy w3m Ns ,
to display thumbnails and file preview.
.It
.Sy firefox
(for js-intensive websites)
and
.Sy seamonkey
(for general web browsing).
.It
.Sy entr
.It
.Sy fzf
.It
.Sy git
.It
.Sy gnupg
.It
.Sy heirloom-doctools
.It
.Sy linuxlibertine-fonts-ttf ,
for
.Xr troff 1 .
.It
.Sy maim
.It
.Sy moreutils
.It
.Sy mpc Ns ,
.Sy mpd Ns ,
and
.Sy ncmpcpp Ns ,
to listen to music.
.It
.Sy mpv
.It
.Sy mutt Ns ,
.Sy isync Ns ,
and
.Sy msmtp Ns ,
for email.
.It
.Sy newsboat
.It
.Sy picom
.It
.Sy pstree
.It
.Sy rlwrap
.It
.Sy slop
.It
.Sy nsxiv
to open images
.It
.Sy unclutter
to remove the mouse cursor after some time when idle.
.It
.Sy unrar Ns ,
and
.Sy unzip
to zip/unzip.
.It
.Sy vim
is my default text editor
.It
.Sy wmapm Ns ,
.Sy wmclock Ns ,
and
.Sy bubblemon-dockapp
for dockapps.
.It
.Sy wpa_supplicant
to connect to university's wireless network.
.It
.Sy wmctrl Ns ,
.Sy xdotool Ns ,
and
.Sy xsel Ns ,
to control X.
.It
.Sy zathura Ns ,
.Sy zathura-djvu Ns ,
.Sy zathura-pdf-poppler Ns ,
and
.Sy zathura-ps Ns .
.El
.Pp
I manually build and install the following programs:
.Bl -bullet -compact
.It
ctrlmenu
.It
fmutils
.It
paginator
.It
pmenu
.It
shod
.It
xfiles
.El
.Pp
I run
.Xr fw_update 1
to install and update needed non-free firmware packages, and
.Xr syspatch 8
to update the base system.
.Pp
The following subsections describe the daemons I enable, and the configuration files I edit.
.Ss Power Management
I use
.Xr apmd 8
for power management.
I use the
.Fl L
flag instead of the
.Fl A
flag because it showed to heat less the computer.
I use the
.Fl z Cm 15
flag to suspend the system when the battery gets to 15% and no AC is connected.
I also use the
.Fl t Cm 60
flag for
.Xr apmd 8
to poll the power state once per minute and log it via
.Xr syslog 3 .
.Ss X11
If
.Xr xenodm 1
was not enabled during installation,
it can be done so later like any other system daemon.
I also edit xenodm's rc file to comment out the line calling
.Xr xconsole 1 ,
disabling the xconsole window on the login screen.
I also add the line `xset b off` to disable the system beep.
.Pp
To tidy my
.Pa $HOME/
directory,
I moved
.Pa ~/.xsession
to
.Pa ~/lib/xinitrc Ns .
For that to work, I need to edit
.Pa /etc/X11/xenodm/Xsession
and replace the value of the
.Sy startup
variable at the end of the script to 
.Sy $HOME/lib/xinitrc Ns .
.Pp
For the touchpad and the trackpoint of my laptop to work as expected,
I configure the
.Xr synaptics 4
X driver, by copying the file
.Pa /usr/X11R6/share/X11/xorg.conf.d/70-synaptics.conf
to
.Pa /etc/X11/xorg.conf.d/
(this directory should be created if non existant).
And then I uncomment the commented out
.Sy "Input Class"
session at the beginning of the file.
.Ss Web Server
I enable
.Xr httpd 8
on my laptop.
My laptop serves my webpage to the local network,
so I can test my webpage before deploying it to the remote server.
To do that, I first create the directory
.Pa /var/www/seninha.org/
and set my user ID and my group ID as its owner user and group.
Thus, when I run
.Ic make test
my webpage content is copied to that directory.
I configure
.Pa /etc/httpd.conf
as follows:
.Bd -literal -offset indent
# cat /etc/httpd.conf
server "seninha.org" {
	listen on * port 80
	root "/seninha.org"
}
.Ed
.Pp
Then, I just need to open the browser at
.Lk http://localhost
and check the changes to my webpage.
.Ss Network
I need
.Xr wpa_supplicant 8
to connect to university's wireless network.
After installing it with
.Xr pkg_add 1 ,
I enable it and edit its configuration file.
.Bd -literal -offset indent
# cat /etc/wpa_supplicant.conf
[...]
network={
        ssid="UNB Wireless"
        key_mgmt=WPA-EAP
        eap=TTLS PEAP
        identity="<MY_USER_ID>"
        password="<MY_PASSWORD>"
}
[...]
.Ed
.Pp
The file
.Pa /etc/hostname.iwn0
contains the wireless networks I use at home and at uni:
.Bd -literal -offset indent
# cat /etc/hostname.iwn0
join "<HOME_NETWORK>" wpakey "<NETWORK_PASSWORD>"
join "UNB Wireless" wpa wpaakms 802.1x
inet6 autoconf
dhcp
.Ed
.Ss Recording
.Pp
I did not use mic until covid happen.  Then I had to do audio calls
every week.  I rarelly use camera, however.  Mic and camera recording
can be enabled by writing to /etc/sysctl.conf.
.Bd -literal -offset indent
# cat /etc/sysctl.conf
kern.audio.record=1
kern.video.record=1
.Ed
.Sh USAGE
.Ss Shell Session
I use
.Xr ksh 1
with emacs-like keybindings, and brace expansion.
The interactive shell is initialized by the
.Pa ~/lib/kshrc
script.
At the beginning of this script, it sources the system-wide
.Pa /etc/ksh.kshrc
if this file exists.
History is saved on
.Pa ~/var/history/ksh_history .
.Pp
The function
.Ic cd
extends the homonym builtin command with a more powerful syntax.
For example,
.Ic cd ...
to go two directories up,
and
.Ic cd .../foo
to go to
.Pa ../../foo .
This function also implements features from
.Ic pushd
and
.Ic popd Ns .
.Pp
The function
.Ic dir
is a wrapper around
.Xr colortree 1 .
It can recursively list the entries of the current working directory,
or recursively search for a file given as argument.
It replaces
.Xr ls 1
and
.Xr find 1
for me.
.Pp
The function
.Ic fuck
runs previous non-doas command with
.Xr doas 1
or retry previos doas command.
.Pp
The function
.Ic hist
searches command history and rerun or edit a past command.
It replaces
.Sy Ctrl-R
and
.Ic fc
for me.
.Pp
I set some aliases:
.Bl -bullet -compact
.It
Muscle memory aliases, like
.Ic :q
and
.Ic :Q
to exit the shell.
.It
Interactive, recursive and verbose aliases for directory manipulation commands
(like
.Xr rm 1 ,
.Xr mv 1
etc)
.It
.Xr ls 1
alias for different options,
such as
.Ic ll
for
.Ic ls -l
and others.
.It
Human readable output for
.Xr df 1
and
.Xr du 1 .
.It
Lazy one-letter aliases for
.Xr less 1
(l),
.Xr vim 1
(v),
.Xr cd 1
(c),
.Xr readme 1
(r),
etc.
.It
Typos, like
.Ic makemake
and
.Ic mkae
for
.Xr make 1 .
.It
Aliases for
.Xr rlwrap
wrapped around interpreters and REPL.
.El
.Pp
I set completions for arguments of the following commands.
All completions are set once at the beginning of the shell session,
except for
.Xr make 1 ,
which is set whenever I run
.Ic cd
to the current change directory.
.Bl -bullet -compact
.It
.Xr skel 1 ,
completed with files from
.Pa ~/lib/skel/ .
.It
.Xr make 1 ,
completed with targets from the current Makefile.
.It
.Xr sysctl 1 ,
completed with kernel state variables.
.It
.Xr rcctl 1 ,
completed with sub-commands as first argument,
and with the names of servers and daemons as second argument.
.It
.Xr git 1 ,
completed with git sub-commands.
.It
.Xr mpc 1 ,
completed with mpc sub-commands as first argument
and with playlists as second argument.
.It
.Xr kill 1
and
.Xr pkill 1 ,
completed with commonly used signals.
.It
.Xr ssh 1 ,
completed with host aliases from my
.Pa ~/.ssh/config .
.It
.Xr ifconfig 1 ,
completed with the names of known interfaces.
.It
.Xr vmctl 1 ,
completed with vmctl sub-commands.
.El
.Pp
My
.Ev PS1
sets the window title and an upper prompt, a left prompt and a right prompt.
The window title is set to the name of the tty and the cwd
(for example,
.Em ttyp2: ~/tmp Ns ).
The upper prompt is a newline (for vertical spacement).
The left prompt is the hostname (if running on ssh) and a left arrow
(which gets red when logged as super user).
The right prompt is the cwd.
.Pp
I trap the ERR special signal to notify the exit status of the last command,
when it is nonzero.
.Ss X11 Session
I use
.Xr shod 1
as window manager.
Its main feature is the possibility to tile, and even tab, windows inside floating containers.
Shod also displays a dock where there are the following dockapps.
.Bl -tag -width Ds
.It Xr ctrlmenu 1
A menu system.
It lists menu entries.
I can navigate through the menus and select an entry to be executed by the shell.
Each entry in the menu can be bound to a key press.
For example, I bind
.Sy Alt+T
to open a terminal.
.Xr ctrlmenu 1
can also spawn a prompt window where I can search for entries and select an entry by typing its name.
.It Xr paginator 1
A desktop pager.
It display miniatures for the virtual desktops and for the windows on them.
It also display the icon for minimized windows.
.It Xr wmapm 1
An
.Xr apm 8
monitor for batery.
.It Xr wmpdart 1
A mpd controller that shows the album art and title of the playing song.
.It Xr bubblemon 1
A system load monitor in the form of a rubber duck.
.It Xr wmclock 1
A NeXTSTEP-like clock and calendar.
.El
.Pp
I use
.Xr picom 1
as my X11 compositor.
I invoke it with a set of command-line arguments that creates a "blue aura" around the active window.
.Pp
I use
.Xr feh
to set the desktop wallpaper.
Currently, I use a dark tiled wallpaper.
.Ss Input
In X11, I use a variation of the Brazilian ABNT-2 layout on a Thinkpad keyboard.
It is configured in
.Pa "~/lib/xkeymap"
and set with
.Xr xkbcomp 1 .
This keyboard lacks the physical key for the
.Sy "slash/question"
symbols (which, on a regular ABNT-2 keyboard, appears at the right of the
.Sy "colon/semicolon"
key, making the right shift shorter).
To type such symbols, I reassigned the
.Sy "cedilla/Cedilla"
key to
.Sy "slash/question" .
To type cedilla, I use
.Sy "dead_acute + c" .
.Pp
I have the following mappings on my personal keyboard layout:
.Bl -bullet
.It
I mapped
.Sy Esc
to the key at the left of
.Sy one ,
so I can reach it more easily.
I use
.Sy "Esc"
mainly in
.Xr vim 1
and in other programs to cancel the current mode or action.
.It
The
.Sy "Left control"
and
.Sy "Caps Lock"
symbols are swapped.
I use the control modifier regularly in different ways by different programs;
and I never use the capslock modifier.
That's why I have control at a more reachable position.
.It
Since I do not need
.Sy "AltGr"
for the two extra layers, my
.Sy "AltGr"
physical key generates the
.Sy "Multi Key"
symbol (also known as compose).
See below for more information on how I use the
.Sy "Multi Key"
to compose symbols.
.It
Since I have the arrow keys and
.Sy "Page Up"
and
.Sy "Page Down"
keys at the main key cluster, below the right shift,
I set the two keys next to them to generate the
.Sy "Home"
and
.Sy "End"
symbols.
Thus, I have the arrow keys and th
.Sy "Home" ,
.Sy "End" ,
.Sy "Page Up" ,
and
.Sy "Page Down"
keys forming a cluster of scrolling keys that I can use with a single hand.
.It
The
.Sy "Left Super"
and
.Sy "Left Alt"
keys generate symbols and modifiers I use to control my desktop.
.El
.Pp
Rather than a four level key symbol system (Normal, Shift, AltGr, Shift+AltGr)
I use only two layers of key symbols, complemented with dead keys
(for Portuguese symbols I use regularly, like accented letters and cedilla),
and the compose key (for drawing characters, greek letters, ligatures, etc).
.Pp
The following illustrations describes the normal and shifted key symbols.
(Postscript versions of those ilustrations can be generated with
.Xr xkbrint 1 . )
.Bd -literal -offset indent
┌───┬───┬───┬───┬───┬───┬───┬───┬───┬───┬───┬───┬───┬────────┐
│esc│ 1 │ 2 │ 3 │ 4 │ 5 │ 6 │ 7 │ 8 │ 9 │ 0 │ - │ = │ bkspc  │
├───┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬──────┤
│ tab │ q │ w │ e │ r │ t │ y │ u │ i │ o │ p │ ' │ [ │enter │
├─────┴┬──┴┬──┴┬──┴┬──┴┬──┴┬──┴┬──┴┬──┴┬──┴┬──┴┬──┴┬──┴┐     │
│ ctrl │ a │ s │ d │ f │ g │ h │ j │ k │ l │ / │ ~ │ ] │     │
├────┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴───┴─────┤
│shft│ \e │ z │ x │ c │ v │ b │ n │ m │ , │ . │ ; │ shift     │
├───┬┴───┼───┼───┼───┴───┴───┴───┴───┼───┼───┼───┼───┬───┬───┤
│fn │caps│win│alt│       space       │mlt│hom│end│pup│up │pdw│
└───┴────┴───┴───┴───────────────────┴───┴───┴───┼───┼───┼───┤
                                                 │lft│dw │rgt│
                                                 └───┴───┴───┘
┌───┬───┬───┬───┬───┬───┬───┬───┬───┬───┬───┬───┬───┬────────┐
│esc│ ! │ " │ # │ $ │ % │ @ │ & │ * │ ( │ ) │ _ │ + │ bkspc  │
├───┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬──────┤
│ tab │ Q │ W │ E │ R │ T │ Y │ U │ I │ O │ P │ ` │ { │enter │
├─────┴┬──┴┬──┴┬──┴┬──┴┬──┴┬──┴┬──┴┬──┴┬──┴┬──┴┬──┴┬──┴┐     │
│ ctrl │ A │ S │ D │ F │ G │ H │ J │ K │ L │ ? │ ^ │ } │     │
├────┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴───┴─────┤
│shft│ | │ Z │ X │ C │ V │ B │ N │ M │ < │ > │ : │ shift     │
├───┬┴───┼───┼───┼───┴───┴───┴───┴───┼───┼───┼───┼───┬───┬───┤
│fn │caps│win│alt│       space       │mlt│hom│end│pup│up │pdw│
└───┴────┴───┴───┴───────────────────┴───┴───┴───┼───┼───┼───┤
                                                 │lft│dw │rgt│
                                                 └───┴───┴───┘
.Ed
.Pp
I have the following dead keys:
.Bl -bullet
.It
.Sy "dead_acute"
(at the right of
.Sy "P" )
generates vowel letters with the acute diacritic.
It generates the lowercase and uppercase cedilla
(common in Portuguese) when used with
.Sy "C" .
It generates an
.Sy "apostrophe"
when used with
.Sy "space" .
.It
.Sy "dead_grave"
(at the same place of
.Sy "dead_acute" ,
but on the shift layer) generates vowel letters with the grave diacritic
(Portuguese only uses this diacritic with the letter
.Dq "A" ).
It generates subscript versions of numbers when used before a number.
It generates the ASCI
.Sy "grave"
symbol when used with
.Sy "space" .
.It
.Sy "dead_tilde"
(at the right of
.Sy "L" )
generates vowel letters (and
.Dq "N" )
with tilde.
(Portuguese only uses this diacritic with the letters
.Dq "A"
and
.Dq "O" ).
It generates the ASCI
.Sy "tilde"
symbol when used with
.Sy "space" .
.It
.Sy "dead_circumflex"
(at the same place of
.Sy "dead_tilde" ,
but on the shift layer) generates vowel letters with the circumflex diacritic.
It generates superscript versions of numbers when used before a number.
It generates the ASCI
.Sy "caret"
symbol when used with
.Sy "space" .
.It
The dead keys
.Sy "dead_macron" ,
.Sy "dead_breve" ,
.Sy "dead_diaeresis" ,
and
.Sy "dead_ring"
are obtained by typing those respective keys after the compose key
.El
.Pp
The following symbols are some of the symbols generated with the compose key
(as configured in
.Pa "~/lib/xcompose" ) .
.Bl -bullet
.It
Greek letters are composed by the
.Sy "Multi_key"
followed by the
.Sy "asterisk"
followed by a latin letter.
.It
Drawing characters with combinations of
the
.Sy "V" ,
.Sy "H" ,
.Sy "L" ,
.Sy "R" ,
.Sy "U" ,
and
.Sy "D"
keys.
.It
Several mathematical symbols.
.It
Double-stroke latin letters (commonly used in math to represent number sets)
are composed with
.Sy "bar"
plus a latin letter.
.It
Subscript and superscript version of letters are composed by the
.Sy "Multi_key"
followed by lowercase
.Sy "s"
or uppercase
.Sy "S" ,
respectivelly, and a latin letter.
.It
.Xr utf8 7
characters from
.Sy U+0000
to
.Sy U+FFFF
can be composed by their code points with the
.Sy "Multi key"
followed by the lowercase
.Sy "u"
followed by four lowercase hexadecimal digits
.Ns ( Sy "0"
to
.Sy "f" ) .
.Pp
As pointer device, I use both Thinkpad's trackpoint and Synaptic's touchpad.
I invoke the following commands at X11 initialization script to make them work:
.Bd -literal -offset indent
# thinkpad trackpoint
xinput set-prop "/dev/wsmouse" \e
	"WS Pointer Wheel Emulation" 1
xinput set-prop "/dev/wsmouse" \e
	"WS Pointer Wheel Emulation Button" 2
xinput set-prop "/dev/wsmouse" \e
	"WS Pointer Wheel Emulation Axes" 6 7 4 5

# synaptics touchpad
synclient TapButton1=1
synclient TapButton2=2
synclient TapButton3=3
synclient AccelFactor=0
synclient HorizTwoFingerScroll=1
.Ed
.El
.Sh ENVIRONMENT
The following environment variables are set by the
.Pa ~/.profile
script.
.Bl -tag -width Ds
.It Ev CACHEDIR
Cache directory.
(Set to
.Pa "$HOME/var/cache" . )
.It Ev DEBUG
Debug flags used by
.Xr make 1
to pass to
.Xr cc 1 .
(Set to
.Fl g
.Fl O0
.Fl Wall
.Fl Wextra . )
.It Ev ENV
Path to ksh's rc file.
(Set to
.Pa "$HOME/lib/kshrc" . )
.It Ev EDITOR
Default editor program.
(Set to
.Pa "vim" . )
.It Ev EXINIT
Path to vi's rc file.
(Set to
.Pa "$HOME/lib/exrc" . )
.It Ev GOPATH
Directory where software managed by
.Xr go 1
should be installed.
(Set to
.Pa "$HOME/usr/go" . )
.It Ev GNUPGHOME
Configuration directory for
.Xr gpg 1 .
(Set to
.Pa "$HOME/var/gpg" . )
.It Ev LANG
Fallback locale.
(Set to
.Ic "pt_BR.UTF-8" . )
.It Ev MANPREFIX
Directory where manuals should be installed.
(Set to
.Pa "$HOME/usr/local/man" . )
.It Ev MANPATH
Path to look for manual pages.
.It Ev MUSICDIR
Music directory.
(Set to
.Pa "$HOME/mus" . )
.It Ev OPENER
Default file opener program.
(Set to
.Pa "plumb" . )
.It Ev PAGER
Default pager program.
(Set to
.Pa "less" . )
.It Ev PREFIX
Directory where manually compiled software should be installed.
(Set to
.Pa "$HOME/usr/local" . )
.It Ev PROJDIR
Directory where projects are maintained.
(Set to
.Pa "$HOME/prj" . )
.It Ev RLWRAP_HOME
Shell history directory used by
.Xr rlwrap 1 .
(Set to
.Pa "$HOME/var/history" . )
.It Ev RULESDIR
Directory where configuration files are installed.
(Set to
.Pa "$HOME/lib" . )
.It Ev SKEL
Directory containing template (skeleton) files.
(Set to
.Pa "$HOME/lib/skel" . 0
.It Ev TERMCMD
Default terminal emulator program.
(Set to
.Pa "xterm" . )
.It Ev THUMBNAILER
Default thumbnail generator program.
(Set to
.Pa "thumbnail" . )
.It Ev TMACPREFIX
Directory where troff macros are installed.
(Set to
.Pa "$HOME/usr/local/tmac" . )
.It Ev TRASH
Trash directory maintained by
.Xr trash 1 .
(Set to
.Pa "$HOME/var/trash" . )
.It Ev TROFFMACS
Path to troff macros prefix.
(Set to
.Pa "$HOME/usr/local/tmac/tmac." . )
.It Ev TZ
Timezone.
(Set to
.Ic "America/Sao_Paulo" . )
.It Ev VIMINIT
Path to vim's rc file.
(Set to
.Pa "$HOME/lib/vimrc" . )
.It Ev VISUAL
Default editor program.
(Set to
.Pa "vim" . )
.It Ev XCOMPOSEFILE
File containing key symbol compositions.
(Set to
.Pa "$HOME/lib/xcompose" . )
.It Ev XDG_CACHE_HOME
xdg shit
(Set to
.Pa "$HOME/.cache" . )
.It Ev XDG_CONFIG_HOME
xdg shit
(Set to
.Pa "$HOME/.config" . )
.It Ev XDG_DATA_HOME
xdg shit
(Set to
.Pa "$HOME/.data" . )
.El
.Sh FILES
The contents of my
.Ev HOME
are listed below.
.Bl -tag -width Ds
.It Pa ~/doc/
Directory where I archive documents.
It contains mostly non-fiction books and videos of lectures.
But I also archive there RPG books and fiction (both in book and movie formats).
.It Pa ~/mem/
Meme directory.
.It Pa ~/mus/
Music directory.
Organized as
.Pa "ARTIST/YEAR - ALBUM/TRACK - TITLE.flac" .
.It Pa ~/prj/
Directory where I store whatever I am working on
(mostly college stuff, things I am learning and programs I maintain).
Each project has a subdirectory in it.
For example,
.Pa ~/prj/shod/
is for
.Xr shod 1 ;
.Pa ~/prj/c/
is for notes on the C Programming Language; etc.
.It Pa ~/lib/
Directory where I store configuration files (aka dotfiles).
For example,
.Pa ~/lib/vimrc
is the configuration file for
.Xr vim 1 .
.Pa ~/lib/
also contain some directories.
The directory
.Pa ~/lib/skel/
is where I store skeleton files
(that is, templates for different file formats).
For example,
.Pa ~/lib/skel/Makefile
is a template for a Makefile;
.Pa ~/lib/skel/man.1
is a template for a section 1 man page; etc.
.It Pa ~/tmp/
Directory where I dump stuff.
It contains mostly downloaded files.
I try to keep it clean, but most of the time it is a mess.
.It Pa ~/usr/
Directory for program files (binaries, sources, manuals, etc).
Each subdirectory contain files installed from a given source or using a
given method.
For example,
.Pa ~/usr/local/
contains data of programs I install manually;
.Pa ~/usr/python/
is for programs installed with
.Xr pip 1 ;
.Pa ~/usr/go/
is for programs installed with
.Xr go 1 ;
etc.
Each subdirectory contains the directories
.Pa bin/ ,
.Pa src/ ,
.Pa man/ ,
and
.Pa etc/
(for binaries, source, manual, and other files).
For example,
.Pa ~/usr/go/bin/lf
is the binary for lf installed by
.Xr go 1 ;
.Pa ~/usr/local/man/man1/shod.1
is the manual for
.Xr shod 1 installed manually; etc.
.It Pa ~/var/
Directory for files managed automatically by applications.
While
.Pa "~/lib"
contains files only read by applications,
.Pa "~/var"
contains files written (and possibly read) by them.
For example,
.Pa ~/var/trash/
contains trashed files managed by
.Xr trash 1 ;
.Pa ~/var/mail/
contains mail managed by
.Xr mutt 1
and
.Xr mbsync 1 ;
.Pa ~/var/history/
contains command history from interpreters like
.Xr ksh 1
and others;
.Pa ~/var/cache
contains cached files generated by several programs.
.El
.Sh SEE ALSO
.Xr hier 7
.Sh TODO
The following are some ideas for my desktop.
.Ss "Reload Theme"
Until recently, I had to log off and log in again to restart
.Xr shod 1
for it to reload the X resources from the X resource database.
.Pp
On a recent commit,
.Xr shod 1
now watches for changes on the resource database and resets its theme
configuration (and redraws everything) when the resource database
changes.  This is not the best approach: The resource database can
change even when no relevant resource changes; in this case
.Xr shod 1
will redraw everything unnecessarily.
.Pp
I need to implement configuration reloading on other programs
(namely
.Xr ctrlmenu 1 ,
.Xr pmenu 1 ,
.Xr paginator ,
and
.Xr taskinator ) .
.Ss "Documents menu entry"
For now,
.Xr ctrlmenu 1
has only the following four entries on the root menu:
.Bl -bullet -compact
.It
Apps (with entries for spawning applications).
.It
Window (with entries for controlling windows).
.It
Music (with entries for controlling the music daemon).
.It
Help (with entries to the manual).
.El
.Pp
I want to implement a new
.Dq "Documents"
entry, with subentries for recent documents/URLs,
favorite (aka bookmarked) documents/URLs,
and with an entry for my
.Ev HOME
directory, where I can browse my files.
.Pp
The most obvious requirement for that is to implement directory listing in
.Xr ctrlmenu 1 .
A special directory entry will list the contents of a directory
and allow me to browse it by opening subdirectories in submenus.
Clicking on a file would open it with
.Xr plumb 1 .
.Pp
Speaking of
.Xr plumb 1 ,
another requirement would be to make plumb write a history of recently open files and URLs that
.Xr ctrlmenu 1
can use to build the submenu.
.Pp
The last requirement is to adopt some kind of bookmark system.
Maybe a single file with one path or URL per line.
I have to check how I will do that work from
.Xr surf 1 .
.Ss "Runner"
I like how KDE's
.Xr krunner 1
works, and I want to make the runner from
.Xr ctrlmenu 1
mimic it.
The following are ideas I have for the runner.
.Bl -bullet -compact
.It
Do simple math calculations from the runner.
(And copy result to clipboard)
.It
Do simple unit conversions.
(And copy result to clipboard)
.It
Open sites from the runner.
.It
Open files.
.It
Search the web.
.It
Search the file system.
.It
Talk via chat.
.It
Show date/time for local or other timezone.
(And copy result to clipboard)
.It
OpenStreetMap.
.It
Spell/dictionary/thesaurus/wikipedia check.
.It
Unicode/emoji check.
.It
.Xr locate 1 .
.El
.Pp
Another interesting feature I want to add is to narrow down the result
to entries from the same group/menu.
.Pp
I also want to make the runner open with a given string pre-written in the input field.
.Ss "Application control"
One feature I always wanted is a unified application control system.
.Pp
For now I need to think how I can control
.Xr surf 1
and
.Xr xfiles 1
with
.Xr ctrlmenu 1
using X Properties.
.Pp
NOTE: can I control which properties can be set by which applications?
.Ss "DooM MooD"
There's this thing I want to write in the future: a dockapp that
monitors the system (CPU load and temperature, memory usage, etc)
with the mood of doomguy's face.
.Pp
(I know there's already such application, called
.Xr wmdl 1 ,
but it poorly compiles and is not maintained anymore,
and does not provides the features I want).
.Pp
In such application, doomguy will respond to alterations in the system
by getting bloodier, moving his face around, looking around, etc.
Hovering him will show a graph of the CPU load though time.  The
background will be a pool of boiling blood whose level gets higher on
memory usage.  I can also make it work like
.Xr xeye 1
and follow the mouse pointer with the eye!
.Pp
I have some
.Pa ".xpm"
files of doomguy's face I have extracted from
.Pa "DOOM.WAD"
and some other variations
(such as a pirate doomguy, a soyjak doomguy, a chad doomguy, etc)
I have found on the web.
I can, somehow, make those variations as easter eggs.
(Maybe the pirate version with eye patch can be displayed when I'm torrenting, idk).
.Pp
Monitoring applications are hardly portable, so I want to make it work only on OpenBSD.
.Pp
I also want it to work with
.Xr ctrlmenu 1
as some kind of
.Dq "Start Menu" ,
so clicking it opens the main desktop menu.
.Ss "Icons, fonts, etc"
I'm writing a set of
.Pa ".xpm"
icons.
My idea is to replace the Haiku icons I use now with them.
(They will be slightly based on BeOS'
(which are basically Haiku's but pixelated)).
.Pp
I will also work on my shity bitmap font in order to make it even more shittier.
I am also working on a set of tiling backgrounds and colorschemes.
.Pp
The idea is to make different themes for shod
and a menu entry on
.Xr ctrlmenu 1
so I can change the global theme on the run.
(Check the section
.Sx "Reload Theme"
to see how that will be possible).
.Ss "Default programs"
I want to fork
.Xr surf 1
into a web browser to fit my needs.
.Pp
I also want to work on my X11 file browser again.
.Ss "Plumber"
I'm working on a plumber utility.
.Ss "Games"
I need to install and play more games.
