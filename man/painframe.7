.Dd May 22, 2023
.Dt PAINFRAME 7
.Os
.Sh NAME
.Nm painframe
.Nd Thinkpad T430
.Sh DESCRIPTION
.Nm
is my home computer.
.Pp
It is a secondhand Lenovo Thinkpad T430 model 23501M2,
with an Intel(R) Core(TM) i5-3320M CPU @ 2.60GHz and 8GB of RAM.
.Pp
I applied the following modifications to the laptop:
.Bl -bullet -compact
.It
I replaced the DVD optical drive with a Serial Ultrabay Enhanced HDD Adapter.
The adapter contains a TOSHIBA MQ01ABD0 500GB HD.
.Lk https://thinkwiki.org/wiki/Ultrabay Ns .
.It
I replaced the T430 chiclet-style keyboard with the T420 classic keyboard,
using the method 2 (Sand down the nubs to fit in the T430 palmrest) on
.Lk https://thinkwiki.org/wiki/Upgrading_T430_Keyboard Ns .
I have not flashed the BIOS to make the keyboard work from boot yet;
but I use xkbcomp(1) to set the keymap on X11.
.It
I wrapped the T430 lid with a black faux leather vinyl adhesive.
.El
.Sh OPERATING SYSTEM
I use OpenBSD -current.
See
.Lk https://www.openbsd.org/faq
for more information on the operating system and how to install it.
.Ss User management
During installation, I create a regular user and set its password.
After installation, I run
.Xr userinfo 8
to make sure my user is in the
.Ic wheel , wobj , operator
groups
(for powers for system administration, port compilation, and machine shutdown, respectively),
and is in the
.Ic staff
login class.
If it is not, I set it up with
.Xr usermod 8 .
.Pp
I create
.Pa /etc/doas.conf
to give administrator priviledges to the wheel group.
The example file at
.Pa /etc/examples/doas.conf
is reasonable,
but I also add
.Ic persist
to it so I'm not asked for password again for some time after successfully authenticating.
I also make it possible for wheel users to run certain commands without password.
.Bd -literal -offset indent
permit persist keepenv :wheel
permit nopass keepenv :wheel as root cmd mount
permit nopass keepenv :wheel as root cmd pkg_add
permit nopass keepenv :wheel as root cmd pkg_delete
permit nopass keepenv :wheel as root cmd syspatch
permit nopass keepenv :wheel as root cmd sysupgrade
permit nopass keepenv :wheel as root cmd umount
.Ed
.Pp
The default system resources limits to the staff login class defined at
.Pa /etc/login.conf
are reasonable.
But the
.Ic datasize-cur
option can be increased a little bit, if necessary.
.Ss Programs
I use the following programs available on the OpenBSD package repository.
.Bl -bullet -compact
.It
.Sy colortree ,
for a fancy recursive
.Xr ls 1 .
.It
.Sy ffmpegthumbnailer ,
.Sy ImageMagick ,
.Sy poppler-utils ,
.Sy mediainfo ,
and
.Sy w3m Ns ,
to display thumbnails and file preview.
.It
.Sy firefox
(for js-intensive websites)
and
.Sy seamonkey
(for general web browsing).
.It
.Sy entr
.It
.Sy fzf
.It
.Sy git
.It
.Sy gnupg
.It
.Sy heirloom-doctools
.It
.Sy linuxlibertine-fonts-ttf ,
for
.Xr troff 1 .
.It
.Sy maim
.It
.Sy moreutils
.It
.Sy mpc Ns ,
.Sy mpd Ns ,
and
.Sy ncmpcpp Ns ,
to listen to music.
.It
.Sy mpv
.It
.Sy mutt Ns ,
.Sy isync Ns ,
and
.Sy msmtp Ns ,
for email.
.It
.Sy newsboat
.It
.Sy picom
.It
.Sy pstree
.It
.Sy rlwrap
.It
.Sy slop
.It
.Sy nsxiv
and
.Sy feh
to open images
.It
.Sy unclutter
to remove the mouse cursor after some time when idle.
.It
.Sy unrar Ns ,
and
.Sy unzip
to zip/unzip.
.It
.Sy vim
is my default text editor
.It
.Sy wmapm Ns ,
.Sy wmclock Ns ,
and
.Sy bubblemon-dockapp
for dockapps.
.It
.Sy wpa_supplicant
to connect to university's wireless network.
.It
.Sy wmctrl Ns ,
.Sy xdotool Ns ,
and
.Sy xsel Ns ,
to control X.
.It
.Sy zathura Ns ,
.Sy zathura-djvu Ns ,
.Sy zathura-pdf-poppler Ns ,
and
.Sy zathura-ps Ns .
.El
.Pp
I manually build and install the following programs:
.Bl -bullet -compact
.It
ctrlmenu
.It
fmutils
.It
paginator
.It
pmenu
.It
shod
.It
xfiles
.El
.Pp
I run
.Xr fw_update 1
to install and update needed non-free firmware packages, and
.Xr syspatch 8
to update the base system.
.Ss Power Management
I use
.Xr apmd 8
for power management.
I use the
.Fl L
flag instead of the
.Fl A
flag because it showed to heat less the computer.
I use the
.Fl z Cm 15
flag to suspend the system when the battery gets to 15% and no AC is connected.
I also use the
.Fl t Cm 60
flag for
.Xr apmd 8
to poll the power state once per minute and log it via
.Xr syslog 3 .
.Ss X11
If
.Xr xenodm 1
was not enabled during installation,
it can be done so later like any other system daemon.
I also edit xenodm's rc file to comment out the line calling
.Xr xconsole 1 ,
disabling the xconsole window on the login screen.
I also add the line `xset b off` to disable the system beep.
.Pp
To tidy my
.Pa $HOME/
directory,
I moved
.Pa ~/.xsession
to
.Pa ~/lib/xinitrc Ns .
For that to work, I need to edit
.Pa /etc/X11/xenodm/Xsession
and replace the value of the
.Sy startup
variable at the end of the script to 
.Sy $HOME/lib/xinitrc Ns .
.Pp
For the touchpad and the trackpoint of my laptop to work as expected,
I configure the
.Xr synaptics 4
X driver, by copying the file
.Pa /usr/X11R6/share/X11/xorg.conf.d/70-synaptics.conf
to
.Pa /etc/X11/xorg.conf.d/
(this directory should be created if non existant).
And then I uncomment the commented out
.Sy "Input Class"
session at the beginning of the file.
.Ss Web Server
I enable
.Xr httpd 8
on my laptop.
My laptop serves my webpage to the local network,
so I can test my webpage before deploying it to the remote server.
To do that, I first create the directory
.Pa /var/www/seninha.org/
and set my user ID and my group ID as its owner user and group.
Thus, when I run
.Ic make test
my webpage content is copied to that directory.
I configure
.Pa /etc/httpd.conf
as follows:
.Bd -literal -offset indent
# cat /etc/httpd.conf
server "seninha.org" {
	listen on * port 80
	root "/seninha.org"
}
.Ed
.Pp
Then, I just need to open the browser at
.Lk http://localhost
and check the changes to my webpage.
.Ss Network
I need
.Xr wpa_supplicant 8
to connect to university's wireless network.
After installing it with
.Xr pkg_add 1 ,
I enable it and edit its configuration file.
.Bd -literal -offset indent
# cat /etc/wpa_supplicant.conf
[...]
network={
        ssid="UNB Wireless"
        key_mgmt=WPA-EAP
        eap=TTLS PEAP
        identity="<MY_USER_ID>"
        password="<MY_PASSWORD>"
}
[...]
.Ed
.Pp
The file
.Pa /etc/hostname.iwn0
contains the wireless networks I use at home and at uni:
.Bd -literal -offset indent
# cat /etc/hostname.iwn0
join "<HOME_NETWORK>" wpakey "<NETWORK_PASSWORD>"
join "UNB Wireless" wpa wpaakms 802.1x
inet6 autoconf
dhcp
.Ed
.Ss Recording
.Pp
I did not use mic until covid happen.  Then I had to do audio calls
every week.  I rarelly use camera, however.  Mic and camera recording
can be enabled by writing to /etc/sysctl.conf.
.Bd -literal -offset indent
# cat /etc/sysctl.conf
kern.audio.record=1
kern.video.record=1
.Ed
.Sh SHELL SESSION
I use
.Xr ksh 1
with emacs-like keybindings, and brace expansion.
The interactive shell is initialized by the
.Pa ~/lib/kshrc
script.
At the beginning of this script, it sources the system-wide
.Pa /etc/ksh.kshrc
if this file exists.
History is saved on
.Pa ~/var/history/ksh_history .
.Ss Command-line Editing
I use emacs-like keybindings because it is configurable on OpenBSD
.Xr ksh 1
(vi-like keybindings cannot be reconfigured).
Those are the usual
.Ic "^U"
for cleaning the line;
.Ic "^W"
for deleting a word; etc.
.Pp
The function
.Ic fuck
re-runs previous non-doas command with
.Xr doas 1
or retry previos doas command.
If
.Xr doas 1
is not found on the system, it uses
.Xr sudo 1
instead (I do that to use the same
.Pa "kshrc"
on both OpenBSD and Linux.
.Pp
The function
.Ic hist
searches command history and rerun or edit a past command.
It replaces
.Ic fc
for me.
.Pp
Other than path completion, i use completions for arguments of a few commands.
The completion system of
.Xr ksh 1
is very simple and not as powerful as the one of
.Xr bash 1 .
Except for the completions for
.Xr make 1
(which is relative to the current directory, see below),
all completions are set once at the beginning of the shell session.
The completion-able commands are the following.
.Bl -bullet -compact
.It
.Xr skel 1 ,
completed with files from
.Pa ~/lib/skel/ .
.It
.Xr make 1 ,
completed with targets from the current Makefile.
.It
.Xr sysctl 1 ,
completed with kernel state variables.
.It
.Xr rcctl 1 ,
completed with sub-commands as first argument,
and with the names of servers and daemons as second argument.
.It
.Xr git 1 ,
completed with git sub-commands.
.It
.Xr kill 1
and
.Xr pkill 1 ,
completed with commonly used signals.
.It
.Xr ssh 1 ,
completed with host aliases from my
.Pa ~/.ssh/config .
.It
.Xr ifconfig 1 ,
completed with the names of known interfaces.
.It
.Xr vmctl 1 ,
completed with vmctl sub-commands and virtual machine names.
.El
.Ss Prompt
Usually, my prompt contains only a character similar to a
.Qq Ic ">"
at the beginning of the line.  But it can be more complex than that.
.Pp
First, my
.Ev PS1
sets the window title to curent directory and the name of the current terminal.
(for example,
.Qq Ic "~/tmp - ttyp2" ) .
.Pp
Above the prompt there is a newline, for vertical spacement.
The prompt itself is the aforementioned
.qq Ic ">"
arrow,
which gets red when using the shell as root.
When running under
.Xr ssh 1 ,
the hostname appears before the arrow.
.Pp
I trap the ERR special signal to notify the exit status of the last command,
when it is nonzero.
.Ss Current Directory
The function
.Ic cd
extends the homonym builtin command with a more powerful syntax.
For example,
.Ic cd ...
to go two directories up,
and
.Ic cd .../foo
to go to
.Pa ../../foo .
This function also implements features from
.Ic pushd
and
.Ic popd Ns .
.Pp
Whenever i enter on a directory under
.Pa "~/prj"
(the projects directory)
the
.Ev DEBUG
and
.Ev PREFIX
environment variables are set for
.Xr make 1 .
.Pp
If the current directory has a makefile,
.Ic cd
automatically sets completions for possible
.Xr make 1
targets.
.Ss Notable Commands
.Pp
The function
.Ic see
shows what is passing through a pipe.
For example, the command shows what is flowing from
.Ic foo
to
.Ic bar
and print its into the terminal.
.Bd -literal -offset indent
$ foo | see | bar
.Ed
.Pp
.Xr dir 1
is a wrapper around
.Xr colortree 1 .
It can recursively list the entries of the current working directory,
or recursively search for a file given as argument.
It replaces
.Xr ls 1
and
.Xr find 1
for me.
.Pp
I set some aliases:
.Bl -bullet -compact
.It
Muscle memory aliases, like
.Ic :q
and
.Ic :Q
to exit the shell.
.It
Interactive, recursive and verbose aliases for directory manipulation commands
(like
.Xr rm 1 ,
.Xr mv 1
etc)
.It
.Xr ls 1
alias for different options,
such as
.Ic ll
for
.Ic ls -l
and others.
.It
Human readable output for
.Xr df 1
and
.Xr du 1 .
.It
Lazy one-letter aliases for
.Xr less 1
(l),
.Xr vim 1
(v),
.Xr cd 1
(c),
.Xr readme 1
(r),
etc.
.It
Typos, like
.Ic makemake
and
.Ic mkae
for
.Xr make 1 .
.It
Aliases for
.Xr rlwrap
wrapped around interpreters and REPL.
.El
.Sh X11 SESSION
I use
.Xr shod 1
as window manager.
Its main feature is the possibility to tile, and even tab, windows inside floating containers.
Shod can be controlled via mouse (by drag-and-dropping windows' titlebars)
and via X11 client messages (through a client called
.Xr shodc 1 ) .
.Pp
I use
.Xr picom 1
as my X11 compositor.
I invoke it with a set of command-line arguments that creates a "blue aura" around the active window.
I use
.Xr feh 1
to set the desktop wallpaper.
Currently, i use a blue tiled wallpaper.
.Ss Dockbar
Shod displays a dock where dockapps
(small windows commonly used on other window managers like WindowMaker)
can be placed.
I use the following dockapps.
.Bl -tag -width Ds
.It Xr ctrlmenu 1
A menu system.
More information on this below.
.It Xr paginator 1
A desktop pager.
.It Xr taskinator 1
A task bar.
.It Xr wmapm 1
An
.Xr apm 8
monitor for batery.
.It Xr wmpdart 1
A mpd controller that shows the album art and title of the playing song.
.It Xr wmclock 1
A NeXTSTEP-like clock and calendar.
.El
.Ss Menu system
.Xr ctrlmenu 1
is a unified launcher and menu system for X11.
It creates input methods for selecting commands to be run.
Commands can be browsed through hierarchical menus,
invoked by keybindings, and searched for in a prompt (called runner).
.Pp
For example,
the command to open a terminal appears on the
.Qq Apps
submenu, clicking it opens a terminal.
This command is bound to the
.Sy Alt+T
keychord, pressing it also opens a terminal window.
I can also invoke the runner and type
.Qq "terminal" ;
that will filter for commands containing this string
(among which is the command to open a terminal).
Several commands are collected by
.Xr ctrlmenu 1 ,
including the following:
.Bl -bullet
.It
Spawn applications (terminal windows, web browser, games, etc).
.It
Window manager operations (close, maximize or minimize windows, etc).
.It
Open files (bookmarked websites and documents,
RSS and Atom feeds, emails, etc).
.It
.Xr mpd 1
controlling (navigate through the playlist, select song to play, etc).
.It
Open manual page from a given section.
.El
.Pp
CtrlMenu's runner also has a calculator feature,
where I can type a simple expression to be computed by
.Xr bc 1 .
The runner can also open a file or URL with
.Xr plumb 1 .
.Pp
.Xr plumb 1
opens a file (or an URL or any string) with the best program associated to the rules the file match.
It can opens the file with different programs according to the desired action
(such as
.Em open
or
.Em edit ) .
.Ss Keyboard Input
I use a variation of the Brazilian ABNT-2 layout on a Thinkpad keyboard.
It is configured in
.Pa "~/lib/xkeymap"
and set with
.Xr xkbcomp 1 .
This keyboard lacks the physical key for the
.Sy "slash/question"
symbols (which, on a regular ABNT-2 keyboard, appears at the right of the
.Sy "colon/semicolon"
key, making the right shift shorter).
To type such symbols, I reassigned the
.Sy "cedilla/Cedilla"
key to
.Sy "slash/question" .
To type cedilla, I use
.Sy "dead_acute + c" .
.Pp
I have the following mappings on my personal keyboard layout:
.Bl -bullet
.It
I mapped
.Sy Esc
to the key at the left of
.Sy one ,
so I can reach it more easily.
I use
.Sy "Esc"
mainly in
.Xr vim 1
and in other programs to cancel the current mode or action.
.It
The
.Sy "Left control"
and
.Sy "Caps Lock"
symbols are swapped.
I use the control modifier regularly in different ways by different programs;
and I never use the capslock modifier.
That's why I have control at a more reachable position.
.It
Since I do not need
.Sy "AltGr"
for the two extra layers, my
.Sy "AltGr"
physical key generates the
.Sy "Multi Key"
symbol (also known as compose).
See below for more information on how I use the
.Sy "Multi Key"
to compose symbols.
.It
Since I have the arrow keys and
.Sy "Page Up"
and
.Sy "Page Down"
keys at the main key cluster, below the right shift,
I set the two keys next to them to generate the
.Sy "Home"
and
.Sy "End"
symbols.
Thus, I have the arrow keys and the
.Sy "Home" ,
.Sy "End" ,
.Sy "Page Up" ,
and
.Sy "Page Down"
keys forming a cluster of scrolling keys that I can use with a single hand.
.It
The
.Sy "Left Super"
and
.Sy "Left Alt"
keys generate symbols and modifiers I use to control my desktop.
.El
.Pp
Rather than a four level key symbol system (Normal, Shift, AltGr, Shift+AltGr)
I use only two layers of key symbols, complemented with dead keys
(for Portuguese symbols I use regularly, like accented letters and cedilla),
and the compose key (for drawing characters, greek letters, ligatures, etc).
.Pp
The following illustrations describes the normal and shifted key symbols.
(Postscript versions of those ilustrations can be generated with
.Xr xkbrint 1 . )
.Bd -literal -offset indent
┌───┬───┬───┬───┬───┬───┬───┬───┬───┬───┬───┬───┬───┬────────┐
│esc│ 1 │ 2 │ 3 │ 4 │ 5 │ 6 │ 7 │ 8 │ 9 │ 0 │ - │ = │ bkspc  │
├───┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬──────┤
│ tab │ q │ w │ e │ r │ t │ y │ u │ i │ o │ p │ ' │ [ │enter │
├─────┴┬──┴┬──┴┬──┴┬──┴┬──┴┬──┴┬──┴┬──┴┬──┴┬──┴┬──┴┬──┴┐     │
│ ctrl │ a │ s │ d │ f │ g │ h │ j │ k │ l │ / │ ~ │ ] │     │
├────┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴───┴─────┤
│shft│ \e │ z │ x │ c │ v │ b │ n │ m │ , │ . │ ; │ shift     │
├───┬┴───┼───┼───┼───┴───┴───┴───┴───┼───┼───┼───┼───┬───┬───┤
│fn │caps│win│alt│       space       │mlt│hom│end│pup│up │pdw│
└───┴────┴───┴───┴───────────────────┴───┴───┴───┼───┼───┼───┤
                                                 │lft│dw │rgt│
                                                 └───┴───┴───┘
┌───┬───┬───┬───┬───┬───┬───┬───┬───┬───┬───┬───┬───┬────────┐
│esc│ ! │ " │ # │ $ │ % │ @ │ & │ * │ ( │ ) │ _ │ + │ bkspc  │
├───┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬──────┤
│ tab │ Q │ W │ E │ R │ T │ Y │ U │ I │ O │ P │ ` │ { │enter │
├─────┴┬──┴┬──┴┬──┴┬──┴┬──┴┬──┴┬──┴┬──┴┬──┴┬──┴┬──┴┬──┴┐     │
│ ctrl │ A │ S │ D │ F │ G │ H │ J │ K │ L │ ? │ ^ │ } │     │
├────┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴───┴─────┤
│shft│ | │ Z │ X │ C │ V │ B │ N │ M │ < │ > │ : │ shift     │
├───┬┴───┼───┼───┼───┴───┴───┴───┴───┼───┼───┼───┼───┬───┬───┤
│fn │caps│win│alt│       space       │mlt│hom│end│pup│up │pdw│
└───┴────┴───┴───┴───────────────────┴───┴───┴───┼───┼───┼───┤
                                                 │lft│dw │rgt│
                                                 └───┴───┴───┘
.Ed
.Pp
I have the following dead keys:
.Bl -bullet
.It
.Sy "dead_acute"
(at the right of
.Sy "P" )
generates vowel letters with the acute diacritic.
It generates the lowercase and uppercase cedilla
(common in Portuguese) when used with
.Sy "C" .
It generates an
.Sy "apostrophe"
when used with
.Sy "space" .
.It
.Sy "dead_grave"
(at the same place of
.Sy "dead_acute" ,
but on the shift layer) generates vowel letters with the grave diacritic
(Portuguese only uses this diacritic with the letter
.Dq "A" ).
It generates subscript versions of numbers when used before a number.
It generates the ASCI
.Sy "grave"
symbol when used with
.Sy "space" .
.It
.Sy "dead_tilde"
(at the right of
.Sy "L" )
generates vowel letters (and
.Dq "N" )
with tilde.
(Portuguese only uses this diacritic with the letters
.Dq "A"
and
.Dq "O" ).
It generates the ASCI
.Sy "tilde"
symbol when used with
.Sy "space" .
.It
.Sy "dead_circumflex"
(at the same place of
.Sy "dead_tilde" ,
but on the shift layer) generates vowel letters with the circumflex diacritic.
It generates superscript versions of numbers when used before a number.
It generates the ASCI
.Sy "caret"
symbol when used with
.Sy "space" .
.It
The dead keys
.Sy "dead_macron" ,
.Sy "dead_breve" ,
.Sy "dead_diaeresis" ,
and
.Sy "dead_ring"
are obtained by typing those respective keys after the compose key
.El
.Pp
The following are some of the symbols generated with the compose key
(as configured in
.Pa "~/lib/xcompose" ) .
.Bl -bullet
.It
Greek letters are composed by the
.Sy "Multi_key"
followed by the
.Sy "asterisk"
followed by a latin letter.
.It
Drawing characters with combinations of
the
.Sy "V" ,
.Sy "H" ,
.Sy "L" ,
.Sy "R" ,
.Sy "U" ,
and
.Sy "D"
keys.
.It
Several mathematical symbols.
.It
Double-stroke latin letters (commonly used in math to represent number sets)
are composed with
.Sy "bar"
plus a latin letter.
.It
Subscript and superscript version of letters are composed by the
.Sy "Multi_key"
followed by lowercase
.Sy "s"
or uppercase
.Sy "S" ,
respectivelly, and a latin letter.
.It
.Xr utf8 7
characters from
.Sy U+0000
to
.Sy U+FFFF
can be composed by their code points with the
.Sy "Multi key"
followed by the lowercase
.Sy "u"
followed by four lowercase hexadecimal digits
.Ns ( Sy "0"
to
.Sy "f" ) .
.El
.Pp
As pointer device, I use both Thinkpad's trackpoint and Synaptic's touchpad.
I invoke the following commands at X11 initialization script to make them work:
.Bd -literal -offset indent
# thinkpad trackpoint
xinput set-prop "/dev/wsmouse" \e
	"WS Pointer Wheel Emulation" 1
xinput set-prop "/dev/wsmouse" \e
	"WS Pointer Wheel Emulation Button" 2
xinput set-prop "/dev/wsmouse" \e
	"WS Pointer Wheel Emulation Axes" 6 7 4 5

# synaptics touchpad
synclient TapButton1=1
synclient TapButton2=2
synclient TapButton3=3
synclient AccelFactor=0
synclient HorizTwoFingerScroll=1
.Ed
.Sh VIRTUALIZATION
I run a few virtual machines on
.Nm
using OpenBSD's
.Xr vmm 4 .
.Pp
Configuration is necessary to set up network access to the guest machines.
Guest machines are connected to both the same network of the host,
and to a virtual network that only exists between the host and the virtual machines.
.Ss Shared network
To make the guests connect to the same network of the host,
I enable IP forwarding at
.Xr systcl.conf 5 ;
and set up a
.Xr bridge 4
interface to the host's wired network interface at
.Xr hostname.if 5 .
.Pp
I append the following lines to
.Pa "/etc/sysctl.conf" ,
to enable IP forwarding:
.Bd -literal -offset indent
net.inet.ip.forwarding=1
net.inet6.ip6.forwarding=1
.Ed
.Pp
I write the following content to
.Pa "/etc/hostname.bridge0"
to configure a
.Xr bridge 4
interface to the
.Xr em 4
interface:
.Bd -literal -offset indent
add em0
up
.Ed
.Ss Virtual network
To make a virtual network between the guests and the host,
I set up a virtual ethernet
.Pq Xr vether 4
interface and a
.Xr bridge 4
to that virtual ethernet at
.Xr hostname.if 5 .
I also make my host as a
.Xr dhcpd 8
server in that virtual network.
I also set a NAT for the virtual network at
.Xr pf.conf 5 .
Finally, I name the guests at
.Xr hosts 5 .
.Pp
The virtual network I chose is
.Ic "10.0.0.0/24" ,
and the host is the gateway
.Pq Ic "10.0.0.1" .
To make this, I write the following lines into
.Pa "/etc/hostname.vether0" :
.Bd -literal -offset indent
inet 10.0.0.1/24
up
.Ed
.Pp
I write the following lines to
.Pa "/etc/hostname.bridge1"
to configure a
.Xr bridge 4
interface to the
.Xr vether 4
interface:
.Bd -literal -offset indent
add vether0
up
.Ed
.Pp
I write the following lines to
.Pa "/etc/dhcpd.conf" ,
giving IPs to the virtual machines according to their MAC addresses.
I then enable
.Xr dhcpd 8
with
.Xr rcctl 8 :
.Bd -literal -offset indent
subnet 10.0.0.0 netmask 255.255.255.0 {
	range 10.0.0.10 10.0.0.127;
	option domain-name-servers 9.9.9.9;
	option routers 10.0.0.1;

	host machine0 {
		hardware ethernet FE:E1:BA:00:00:00;
		fixed-address 10.0.0.10;
	}

	host machine2 {
		hardware ethernet FE:E1:BA:00:00:01;
		fixed-address 10.0.0.11;
	}

	host machine3 {
		hardware ethernet FE:E1:BA:00:00:02;
		fixed-address 10.0.0.12;
	}

	host machine4 {
		hardware ethernet FE:E1:BA:00:00:03;
		fixed-address 10.0.0.13;
	}

	host machine5 {
		hardware ethernet FE:E1:BA:00:00:04;
		fixed-address 10.0.0.14;
	}
}
.Ed
.Pp
I append the following lines to
.Pa "/etc/pf.conf"
to configure the NAT:
.Bd -literal -offset indent
match out on egress from vether0:network to any nat-to (egress)
.Ed
.Pp
Finally, I append the following lines to
.Pa "/etc/hosts"
to give names to the virtual machines:
.Bd -literal -offset indent
10.0.0.10       9front.vm
10.0.0.11       guix.vm
10.0.0.12       wagie1.vm
10.0.0.13       wagie2.vm
.Ed
.Ss Virtual machines
I keep my virtual machines at
.Pa "~/var/vms"
and control them with
.Xr vmctl 8 .
.Pp
Currently, I have the following virtual machines:
.Bl -tag -width Ds
.It Xr wagie 7
A Debian system used for work and Linux development.
.It Xr freedoom 7
A GNU Guix system used for fun.
.It Xr nein 7
A 9front system used for fun.
.El
.Pp
I write the following to
.Pa "/etc/vm.conf"
to set up the virtual machines and their network interfaces.
.Bd -literal -offset indent
switch "physical" {
	interface bridge0
}

switch "virtual" {
	interface bridge1
}

vm "9front" {
	disable
	memory 1024M
	boot device disk
	cdrom "/home/lucas/var/vms/9front.bak/9front.iso"
	disk "/home/lucas/var/vms/9front.bak/9front.qcow2"
	owner lucas
	interface {
		switch "physical"
		lladdr FE:E1:BA:00:00:80
	}
	interface {
		switch "virtual"
		lladdr FE:E1:BA:00:00:00
		# ip 10.0.0.10
	}
}

vm "guix" {
	disable
	memory 1024M
	boot device disk
	disk "/home/lucas/var/vms/guix/guix.qcow2"
	owner lucas
	interface {
		switch "physical"
		lladdr FE:E1:BA:00:00:81
	}
	interface {
		switch "virtual"
		lladdr FE:E1:BA:00:00:01
		# ip 10.0.0.11
	}
}

vm "wagie1" {
	disable
	memory 1024M
	boot device disk
	cdrom "/home/lucas/var/vms/wagie/debian.iso"
	disk "/home/lucas/var/vms/wagie/wagie.qcow2"
	owner lucas
	interface {
		switch "physical"
		lladdr FE:E1:BA:00:00:82
	}
	interface {
		switch "virtual"
		lladdr FE:E1:BA:00:00:02
		# ip 10.0.0.12
	}
}
.Ed
.Sh ENVIRONMENT
The following environment variables are set by the
.Pa ~/.profile
script.
.Bl -tag -width Ds
.It Ev CACHEDIR
Cache directory.
(Set to
.Pa "$HOME/var/cache" . )
.It Ev DEBUG
Debug flags used by
.Xr make 1
to pass to
.Xr cc 1 .
(Set to
.Fl g
.Fl O0
.Fl Wall
.Fl Wextra . )
.It Ev ENV
Path to ksh's rc file.
(Set to
.Pa "$HOME/lib/kshrc" . )
.It Ev EDITOR
Default editor program.
(Set to
.Pa "vim" . )
.It Ev EXINIT
Path to vi's rc file.
(Set to
.Pa "$HOME/lib/exrc" . )
.It Ev GOPATH
Directory where software managed by
.Xr go 1
should be installed.
(Set to
.Pa "$HOME/usr/go" . )
.It Ev GNUPGHOME
Configuration directory for
.Xr gpg 1 .
(Set to
.Pa "$HOME/var/gpg" . )
.It Ev LANG
Fallback locale.
(Set to
.Ic "pt_BR.UTF-8" . )
.It Ev MANPREFIX
Directory where manuals should be installed.
(Set to
.Pa "$HOME/usr/local/man" . )
.It Ev MANPATH
Path to look for manual pages.
.It Ev MUSICDIR
Music directory.
(Set to
.Pa "$HOME/mus" . )
.It Ev OPENER
Default file opener program.
(Set to
.Pa "plumb" . )
.It Ev PAGER
Default pager program.
(Set to
.Pa "less" . )
.It Ev PREFIX
Directory where manually compiled software should be installed.
(Set to
.Pa "$HOME/usr/local" . )
.It Ev PROJDIR
Directory where projects are maintained.
(Set to
.Pa "$HOME/prj" . )
.It Ev RLWRAP_HOME
Shell history directory used by
.Xr rlwrap 1 .
(Set to
.Pa "$HOME/var/history" . )
.It Ev RULESDIR
Directory where configuration files are installed.
(Set to
.Pa "$HOME/lib" . )
.It Ev SKEL
Directory containing template (skeleton) files.
(Set to
.Pa "$HOME/lib/skel" . 0
.It Ev TERMCMD
Default terminal emulator program.
(Set to
.Pa "xterm" . )
.It Ev THUMBNAILER
Default thumbnail generator program.
(Set to
.Pa "thumbnail" . )
.It Ev TMACPREFIX
Directory where troff macros are installed.
(Set to
.Pa "$HOME/usr/local/tmac" . )
.It Ev TRASH
Trash directory maintained by
.Xr trash 1 .
(Set to
.Pa "$HOME/var/trash" . )
.It Ev TROFFMACS
Path to troff macros prefix.
(Set to
.Pa "$HOME/usr/local/tmac/tmac." . )
.It Ev TZ
Timezone.
(Set to
.Ic "America/Sao_Paulo" . )
.It Ev VIMINIT
Path to vim's rc file.
(Set to
.Pa "$HOME/lib/vimrc" . )
.It Ev VISUAL
Default editor program.
(Set to
.Pa "vim" . )
.It Ev XCOMPOSEFILE
File containing key symbol compositions.
(Set to
.Pa "$HOME/lib/xcompose" . )
.It Ev XDG_CACHE_HOME
xdg shit
(Set to
.Pa "$HOME/.cache" . )
.It Ev XDG_CONFIG_HOME
xdg shit
(Set to
.Pa "$HOME/.config" . )
.It Ev XDG_DATA_HOME
xdg shit
(Set to
.Pa "$HOME/.data" . )
.El
.Sh FILES
The contents of my
.Ev HOME
are listed below.
.Bl -tag -width Ds
.It Pa ~/doc/
Directory where I archive documents.
It contains mostly non-fiction books and videos of lectures.
But I also archive there RPG books and fiction (both in book and movie formats).
.It Pa ~/mem/
Meme directory.
.It Pa ~/mus/
Music directory.
Organized as
.Pa "ARTIST/YEAR - ALBUM/TRACK - TITLE.flac" .
.It Pa ~/prj/
Directory where I store whatever I am working on
(mostly college stuff, things I am learning and programs I maintain).
Each project has a subdirectory in it.
For example,
.Pa ~/prj/shod/
is for
.Xr shod 1 ;
.Pa ~/prj/c/
is for notes on the C Programming Language; etc.
.It Pa ~/lib/
Directory where I store configuration files (aka dotfiles).
For example,
.Pa ~/lib/vimrc
is the configuration file for
.Xr vim 1 .
.Pa ~/lib/
also contain some directories.
The directory
.Pa ~/lib/skel/
is where I store skeleton files
(that is, templates for different file formats).
For example,
.Pa ~/lib/skel/Makefile
is a template for a Makefile;
.Pa ~/lib/skel/man.1
is a template for a section 1 man page; etc.
.It Pa ~/tmp/
Directory where I dump stuff.
It contains mostly downloaded files.
I try to keep it clean, but most of the time it is a mess.
.It Pa ~/usr/
Directory for program files (binaries, sources, manuals, etc).
Each subdirectory contain files installed from a given source or using a
given method.
For example,
.Pa ~/usr/local/
contains data of programs I install manually;
.Pa ~/usr/python/
is for programs installed with
.Xr pip 1 ;
.Pa ~/usr/go/
is for programs installed with
.Xr go 1 ;
etc.
Each subdirectory contains the directories
.Pa bin/ ,
.Pa src/ ,
.Pa man/ ,
and
.Pa etc/
(for binaries, source, manual, and other files).
For example,
.Pa ~/usr/go/bin/lf
is the binary for lf installed by
.Xr go 1 ;
.Pa ~/usr/local/man/man1/shod.1
is the manual for
.Xr shod 1 installed manually; etc.
.It Pa ~/var/
Directory for files managed automatically by applications.
While
.Pa "~/lib"
contains files only read by applications,
.Pa "~/var"
contains files written (and possibly read) by them.
For example,
.Pa ~/var/trash/
contains trashed files managed by
.Xr trash 1 ;
.Pa ~/var/mail/
contains mail managed by
.Xr mutt 1
and
.Xr mbsync 1 ;
.Pa ~/var/history/
contains command history from interpreters like
.Xr ksh 1
and others;
.Pa ~/var/cache
contains cached files generated by several programs.
.El
.Sh SEE ALSO
.Xr hier 7
