#!/bin/sh

gettab() {
	lsc -ls -g _SHOD_TAB_GROUP | awk -v DIR="$1" '
		function cmp(framea, frameb,    a, b) {
			split(geom[framea], a, /[-x+]/)
			split(geom[frameb], b, /[-x+]/)
			if (geom[framea] ~ /^[0-9]+x[0-9]+-/)
				a[X] = - a[X]
			if (geom[framea] ~ /-[0-9]+$/)
				a[Y] = - a[Y]
			if (geom[frameb] ~ /^[0-9]+x[0-9]+-/)
				b[X] = - b[X]
			if (geom[frameb] ~ /-[0-9]+$/)
				b[Y] = - b[Y]
			if (DIR == "right") {
				if (b[Y] == s[Y])
					return 1
				if (a[X] < b[X])
					return 1
			} else if (DIR == "left") {
				if (b[Y] == s[Y])
					return 1
				if (a[X] > b[X])
					return 1
			} else if (DIR == "down") {
				if (b[X] == s[X])
					return 1
				if (a[Y] < b[Y])
					return 1
			} else if (DIR == "up") {
				if (b[X] == s[X])
					return 1
				if (a[Y] > b[Y])
					return 1
			}
			return 0
		}
		{
			if (!geom[$4]) {
				geom[$4] = $3
				nframes[$2]++
			}
			frames[$2, nframes[$2]] = $4
		}
		substr($1, 11, 1) == "A" {
			sel = $4
			desk = $2
			split(geom[sel], s, /[-x+]/)
			if (geom[sel] ~ /^[0-9]+x[0-9]+-/)
				s[X] = - s[X]
			if (geom[sel] ~ /-[0-9]+$/)
				s[Y] = - s[Y]
		}
		BEGIN {
			W = 1
			H = 2
			X = 3
			Y = 4
		}
		END {
			if (DIR == "prev") {
				print frames[desk, (nframes[desk] + sel - 1) % nframes[desk]]
			} else if (DIR == "next") {
				print frames[desk, (sel + 1) % nframes[desk]]
			} else {
				curr = sel
				for (i = 1; i <= nframes[desk]; i++) {
					if (sel != frames[desk, i] && cmp(curr, frames[desk, i])) {
						curr = frames[desk, i]
					}
				}
				print curr
			}
		}
	'
}

wmctrl -ia $(gettab $1)
