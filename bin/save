#!/bin/sh
#
# Usage: CMD | save [-abfint] FILE ...
# Saves stdin into FILE; flags tells what to do when FILE exists.
#
# © 2025 Lucas de Sena <lucas at seninha dot org>.  No rights reserved.
# THIS SOFTWARE IS PROVIDED "AS IS" WITHOUT ANY WARRANTY (Works On My Machine™)

action=
tee=false
exitval=0

msg() {
	printf "$@" >&2
}

usage() {
	msg "usage: %s [-abfint] file..." "${0##*/}"
	exit 2
}

while getopts abfint opt
do case "$opt" in
([abfin])
	action="$opt"
	;;
(t)
	tee=true
	;;
(*)
	usage
	;;
esac done
shift "$((OPTIND - 1))"
test "$#" -eq 0 && usage

temp="$(mktemp -p "$(dirname "$1")")" || exit
trap 'rm -f -- "$temp"' EXIT
cat >"$temp" || exit


"$tee" && cat "$temp"
exec >&-

for file
do
	shift

	case "$file" in
	(""|[[:space:]]*|*[[:space:]])
		msg "save: %s: Invalid argument\n" "$file"
		exitval=1
		continue
		;;
	esac

	unique="$(
		basename="${file##*/}"
		dirname="${file%"$basename"}"
		body="${basename%.*}"
		ext="${basename##"$body"}"
		unset -v i p
		while test -e "$dirname$body$p$i$ext"
		do
			p="_"
			if test -z "$i"
			then
				i=1
			else
				i="$((i + 1))"
			fi
		done
		printf "%s" "$dirname$body$p$i$ext"
	)"

	if test -e "$file"
	then
		ans="$action"
		if test -z "$action"
		then
			msg "save: %s: File exists\n" "$file"
			exitval=1
			continue
		elif test "$action" = "i"
		then
			msg "%s: File exists\n" "$file"
			msg "\t(B)ackup,"
			msg " (F)orce overwrite,"
			msg " (A)ppend,"
			msg " or save as (N)ew file?\n"
			read -r ans </dev/tty
		fi >&2
		case "$ans" in
		(a)
			# append into existing file
			cat <"$temp" >>"$file"
			continue
			;;
		(b)
			# backup existing file
			mv -f -- "$file" "$unique" || exit
			;;
		(f)
			# overwrite existing file
			rm -f -- "$file"
			;;
		(n)
			# save as new file, if exists
			file="$unique"
			;;
		(?)
			continue
			;;
		esac
	fi
	if test "$#" -eq 0
	then
		mv -f -- "$temp" "$file" || exitval=1
	else
		cp -f -- "$temp" "$file" || exitval=1
	fi
done

rm -f "$temp"
exit "$exitval"
