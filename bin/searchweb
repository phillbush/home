#!/bin/sh
#
# Usage: search [QUERY ...]
# Search QUERYs in duckduckgo.
# Depends on curl(1), awk(1).
#
# Â© 2025 Lucas de Sena <lucas at seninha dot org>.  No rights reserved.
# THIS SOFTWARE IS PROVIDED "AS IS" WITHOUT ANY WARRANTY (Works On My Machine).

test "$#" -lt 1 && {
	printf "usage: %s query ...\n" "${0##*/}" >&2
	printf "       %s\n" 'Try to use "intitle:", "inurl:", and "site:" query modifiers.' >&2
	printf "       %s\n" 'Prepend a query with "-" to ignore results.' >&2
	exit 2
}

## I could use webdump(1) here; but
htmlfmt() {
	TZ="UTC" LC_CTYPE="C.UTF-8" awk '
	function gottag(tag, class) {
		if (index($0, tag) != 1)
			return 0
		if (class == "")
			return 1
		if (substr($0, length(tag) + 1, 1) != " ")
			return 0
		if (!match($0, /class=["'\''][^"'\'']+["'\'']/))
			return 0
		if (!index(substr($0, RSTART, RLENGTH), class))
			return 0
		return 1
	}

	function gethref(a)
	{
		if (!match(a, /href=["'\''][^"'\'']+["'\'']/))
			return
		return substr(a, RSTART + 6, RLENGTH - 7)
	}

	function printtag(name)
	{
		sub(/.*>[[:space:]]*/, "")
		do {
			sub(/.*>/, "")
			gsub("(&nbsp;)+", " ")
			if (NR == 0) continue
			gsub(/&#x20;/, " ")
			gsub(/&#x21;/, "!")
			gsub(/&(#x22|quot);/, "\"")
			gsub(/&#x23;/, "#")
			gsub(/&#x24;/, "$")
			gsub(/&#x25;/, "%")
			gsub(/&(#x26|amp);/, "\\&")
			gsub(/&#x27;/, "'\''")
			gsub(/&#x28;/, "(")
			gsub(/&#x29;/, ")")
			gsub(/&#x2[Aa];/, "*")
			gsub(/&#x2[Bb];/, "+")
			gsub(/&#x2[Cc];/, ",")
			gsub(/&#x2[Dd];/, "-")
			gsub(/&#x2[Ee];/, ".")
			gsub(/&#x2[Ff];/, "/")
			gsub(/&#x3[Aa];/, ":")
			gsub(/&#x3[Bb];/, ";")
			gsub(/&(#x3[Cc]|lt);/, "<")
			gsub(/&#x3[Dd];/, "=")
			gsub(/&(#x3[Ee]|gt);/, ">")
			gsub(/&#x3[Ff];/, "?")
			gsub(/&#x40;/, "@")
			gsub(/&#x5[Bb];/, "[")
			gsub(/&#x5[Cc];/, "\\")
			gsub(/&#x5[Dd];/, "]")
			gsub(/&#x5[Ee];/, "^")
			gsub(/&#x5[Ff];/, "_")
			gsub(/&#x60;/, "`")
			gsub(/&#x7[Bb];/, "{")
			gsub(/&#x7[Cc];/, "|")
			gsub(/&#x7[Dd];/, "}")
			gsub(/&#x7[Ee];/, "~")
			printf "%s", $0
		} while (getline > 0 && !gottag("/" name))
	}

	BEGIN {
		RS = "<"
		step=0
	}

	gottag("a", "result-link") {
		link = gethref($0)
		printtag("a"); print ""
		if (link)
			print link
		next
	}

	gottag("td", "result-snippet") {
		printtag("td")
		printf "\n\n"
		next
	}

	gottag("td") {
		if ($0 !~ "Zero-click info")
			next
		getline
		if (!gottag("a"))
			next
		link = gethref($0)
		while (getline > 0 && !gottag("td"))
			;
		if (!gottag("td"))
			next
		if (link)
			print link
		printtag("td")
		printf "\n\n"
		next
	}
	'
}

## ignore shity saits
#set -- "$@" \
#	-site:w3schools.com \
#	-site:geeksforgeeks.com \
#	-site:https://www.freecodecamp.org \
#	-site:fandom.com

curl --silent --location --get \
--data-urlencode "q=$*" \
--data "kp=-1" --data "kd=-1" \
"https://duckduckgo.com/lite/" | tr -d '[:cntrl:]' | htmlfmt

## uncomment and move these below the curl line above if ddg gets angry
#--user-agent 'Dillo/3.2.0' \
#--header 'Accept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8' \
#--header 'Accept-Encoding: gzip, deflate' \
#--header 'DNT: 1' \
#--header 'Referer: https://duckduckgo.com/' \
#--header 'Connection: keep-alive' \
#--cookie '' \
